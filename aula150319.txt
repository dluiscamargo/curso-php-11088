Assinchronous Javascript And XML

ARRAY: sempre representado entre colchetes []

$aVarName = []; // array vasio
$aVarName = array(); // php mais antigo

$aVarName[] = 3;
$aVarName[] = 5;
$aVarName[] = 7;

$aVarName[ 2, 6, 9]; // array com tres parametros
$aVarName = array(2,4,9) // php mais antigo

***********************************************************************************************************************************************

$aVarName[3] = 3; //adiciona elementos ao array
$aVarName[1] = 5;
$aVarName[8] = 7;
--nesta nota��o o array n�o tem indice
************************************************************************************************************************************************

$aVarName["teste"] = 3; //adiciona elementos ao array
$aVarName["abacaxi"] = 5;
$aVarName["name"] = 7;

$aVarName = ["teste" => 2, "abacaxi" => 6, "name" => 9];

-- nesta forma cria-se o array com a indexa��o associativa: os indeices s�o definidos pod strings

independente da forma como o array � criado e da forma como ele � indexado, n�s sempre temos uma sequencia de variaveis indexadas;

Um objeto tamb�m � definidao (entre outras coisas) por uma sequencia de variaveis (como um array )porem esta sequencia � uma sequencia de variaveis
nomeadas ou seja cada variavel tem um nome.

***************************************************************************************************************************************************

Quais s�o as propriedades de um objeto;

As propriedades representam os valores que caracterizam o objeto.

-criar um funcionalidade (menu)

- objetos do tipo menu

id          : string
capitions:  : string  
items       : array de itemDeMenu

- Objetos de tipo ItemDeMenu
href    :  string
target  :  string
caption :  string
	
 

*****************************************************************************************************************************************************

<?
// Criando nossa classe
class Aluno {
  var $nome;
  var $turma;
  var $idade;
}
>

<?
//Instanciando nossa classe
require_once("Aluno.php");
$emanuel = new Aluno;
$emanuel->nome =  "Emanuel Gon�alves";
$emanuel->turma = 3001;
$emanuel->idade = 19;
>

 - Novamente considera��es importantes: h� uma outra conven��o, que voc� crie seus m�dulos (arquivos com as classes) e nomeie eles
come�ando com letra mai�scula, que nem na classe. Ao instanciar minha classe, usei o operador new. Por fim, � uma regra sint�tica do PHP, 
que particularmente me incomoda bastante, que se deve usar para acessar um atributo ou um m�todo, o ->, ou setinha. Assim, quando fa�o
$emanuel->nome estou acessando o atributo nome do objeto emanuel da classe Aluno.

 - Para terminar este texto, vou falar dos m�todos, que s�o coisas que as classes podem fazer. At� aqui, falei dos atributos, que s�o
as caracter�sticas das classes. Os m�todos s�o nada mais, nada menos que fun��es dentro das classes. Qual seria um m�todo de um aluno?

<?
//Criando o m�todo fazer prova e chamando ele no meu objeto
class Aluno {
  // ... Código passado
  
  function fazerProva() {
    echo "{$this->nome} est� fazendo prova";
  }
}
// Chamando meu m�todo
// ... C�digo passado
$emanuel->fazerProva();
>

 - Note mais algumas coisas: um m�todo � uma fun��o, ent�o come�a com a palavra reservada function. Outra coisa,
para eu acessar um atributo da minha classe no meu m�todo, eu uso o $this. E por fim, para eu acessar este m�todo no meu objeto,
uso do mesmo artif�cio dos atributos, ->, e o nome do m�todo.
--------------------------
banco de dados

cliente-servidor

------------------------------------------------------------------------------------------------------------------------------
SQL -Structured query language

DDL DATA DEFINITION LANGUAGE
DML DATA MANIPULATON LANGUAGE

do ponto de vista do php oque é o sql?  = texto, string.
do ponto de vista do php oque é o jSon? = texto.
do ponto de vista do php oque é o html? = texto.


-------------------------------------------
//UPDATE `categories` SET `CategoryID`=[value-1],`CategoryName`=[value-2],`Description`=[value-3],`Picture`=[value-4] WHERE 1
//INSERT INTO `categories`(`CategoryID`, `CategoryName`, `Description`, `Picture`) VALUES ([value-1],[value-2],[value-3],[value-4])
//DELETE FROM `categories` WHERE 0

---------------------------------------------------------
TABELA NO BANCO DE DADOS
    NOME DA TABELA
    CAMPOS
    CHAVE PRIMARIA E SE É AUTO_INCREMENT


 -------------------------------------------------
DATABASE = conexao com o banco de dados 
--------------------------------------------------
DATASET = [ conexão com o banco de dados
            acesso generico as tabelas  ]
----------------------------------------------------
TAB SUPPLIERS... 
TAB PRODUCTS  = [ conexão com o banco de dados
                 acesso especializado a uma determinada tabela ]